{% extends 'common/html/base.html.j2' -%}


<style>
    {% block custom_style %}
        table { table-layout: fixed; word-wrap: break-word; }
        input::-webkit-outer-spin-button, input::-webkit-inner-spin-button { -webkit-appearance: none; appearance: none; margin: 0; } /* Chrome, Safari, Edge, Opera */
        input[type=number] { -moz-appearance: textfield; appearance: textfield; } /* Firefox */
        .asset-list-handle { cursor: move; cursor: -webkit-grabbing; }
        /* .overlay { position: fixed; width: 100%; height: 100%; top: 0; left: 0; right: 0; bottom: 0;}
        .dim { background-color: rgba(0,0,0,0.5);}
        .hover-shake {animation: shake 2s; animation-iteration-count: infinite; animation-direction: alternate;}
        .anim-rev {animation-direction: alternate-reverse !important;}
        @keyframes shake { 0%{ transform: translate(1px, 1px) rotate(0deg); } 10%{ transform: translate(-1px, -2px) rotate(-1deg); } 20%{ transform: translate(-3px, 0px) rotate(1deg); } 30%{ transform: translate(3px, 2px) rotate(0deg); } 40%{ transform: translate(1px, -1px) rotate(1deg); } 50%{ transform: translate(-1px, 2px) rotate(-1deg); } 60%{ transform: translate(-3px, 1px) rotate(0deg); } 70%{ transform: translate(3px, 1px) rotate(-1deg); } 80%{ transform: translate(-1px, -1px) rotate(1deg); } 90%{ transform: translate(1px, 2px) rotate(0deg); } 100%{ transform: translate(1px, -2px) rotate(-1deg); }} */
    {% endblock custom_style %}
</style>

   
<main><!-- ondragenter="$('overlay').show()"> -->
    <!-- <div id="overlay" class="overlay dim" style="z-index: 10000; display: none;">
        <div id="dnd-interceptor" class="overlay" ondragover="event.preventDefault(); event.stopPropagation();" ondragleave="$('overlay').hide()"></div>
        <div class="position-absolute top-50 start-50 translate-middle">
            <div class="row">
                <div class="col" style="font-size: 10vw; color: white; margin: -0.5vw; transform: rotate(-30deg);"><div class="hover-shake"><i class="bi bi-image"></i></div></div>
                <div class="col" style="font-size: 10vw; color: white; margin: -0.5vw; transform: translateY(-3vh);"><div class="hover-shake anim-rev"><i class="bi bi-music-note-beamed"></i></div></div>
                <div class="col" style="font-size: 10vw; color: white; margin: -0.5vw; transform: rotate( 30deg);"><div class="hover-shake"><i class="bi bi-film"></i></div></div>
            </div>
            <div class="row mt-3"><h4 class="text-center text-light"><b>Drop file(s) here to upload</b></h4></div>
        </div>
    </div> -->
    {% block main_content %}
    <div class="row">
        <div class="col-lg-4 pe-lg-2 order-1 order-lg-12">
            <div class="hstack gap-2 mb-1">
                <h5>Files</h5>
                <div class="ms-auto">
                    <div class="btn-group" role="group">
                        <button type="button" title="Delete files" onclick="sendCommand('scheduler/delete_file', {files: checkedfiles}); uncheckAll()" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>
                        <button type="button" title="Download files" onclick="downloadFiles(checkedfiles); uncheckAll()" class="btn btn-sm btn-outline-secondary"><i class="bi bi-download"></i></a>
                        <button type="button" title="Add to list" onclick="sendCommand('scheduler/asset', {items: checkedfiles}); uncheckAll()" class="btn btn-sm btn-outline-secondary"><i class="bi bi-box-arrow-in-right"></i></button>
                    </div>
                </div>
                <button type="button" class="btn btn-sm btn-success" onclick="fileSelector.click()" style="width: 6.7em;"><i class="bi bi-file-earmark-arrow-up"></i> Upload</button>
            </div>
            <div class="progress" id="upload-progress" style="display: none;">
                <div class="progress-bar progress-bar-striped progress-bar-animated" id="upload-progress-bar" role="progressbar" style="width: 0%">0%</div>
            </div>
            <ol id="file-list" class="list-group"></ol>
        </div>
        <div class="col-lg-8 mt-4 mt-lg-0 order-12 order-lg-1">
            <div class="hstack gap-2">
                <h5>Playlist</h5>
                <div class="ms-auto">
                    <div class="btn-group" role="group">
                        <button type="button" title="Previous asset" class="btn btn-sm btn-outline-primary" onclick="sendCommand('scheduler/goto/back')"><i class="bi bi-skip-backward"></i></button>
                        <button type="button" title="Reload asset" class="btn btn-sm btn-outline-primary" onclick="sendCommand('scheduler/goto', {force: true})"><i class="bi bi-arrow-clockwise"></i></button>
                        <button type="button" title="Next asset" class="btn btn-sm btn-outline-primary" onclick="sendCommand('scheduler/goto/next')"><i class="bi bi-skip-forward"></i></button>
                    </div>
                </div>
                <button class="btn btn-sm btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#newAssetModal"><i class="bi bi-plus-circle"></i> Add URL</button>
            </div>
            <div class="row">
                <table class="table table-hover">
                    <thead class="border-bottom">
                        <tr name="asset-row">
                            <th scope="col" style="width: 2em;"></th>
                            <th scope="col">URL</th>
                            <th scope="col" style="width: 6em;">Duration</th>
                            <th scope="col" style="width: 8em;"></th>
                        </tr>
                    </thead>
                    <tbody id="asset_table"></tbody>
                </table>
            </div>
        </div>
    </div>
    {% endblock main_content %}
</main>
    
{% set ext_scripts = ['Sortable.min.js'] %}
    
{% set init_cmds = [
    'scheduler/asset',
    'scheduler/asset/current',
    'scheduler/file',
    'settings/hostname',
    'settings/default_duration'
] %}

<script>
{% block js %}
    const asset_table = $('#asset_table');
    const modal_input_url = $('#modal_input_url');
    const fileSelector = $('<input type="file" multiple>')
        .on('change', () => {if (fileSelector.files.length > 0)uploadFiles(Array.from(fileSelector.files), true)});
    
    sortable_list = Sortable.create(asset_table[0], {
        onUpdate: (event) => {sendCommand('scheduler/reorder', {from: event.oldIndex, to: event.newIndex});},
        handle: ".asset-list-handle"
    });

    function readyStateHandler(xhttp, on_success, on_error){
        if (xhttp.readyState == 4){
            if (xhttp.status >= 200 && xhttp.status < 300) {
                if (on_success == true) location.reload();
                else if (on_success instanceof Function) on_success(xhttp.response);
            } else if (!(on_error && on_error(xhttp.response, xhttp.status))) {
                messageModal.find('.modal-title').text("Error");
                messageModal.find('.modal-body h6').text(`Request returned ${xhttp.status} (${xhttp.statusText})`);
                messageModal.find('.modal-body code').text(xhttp.response);
                new bootstrap.Modal(messageModal).show();
            }
        }
    };

    function uploadFiles(files, on_success, on_error) {
        let xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = () => readyStateHandler(xhttp, on_success, on_error);
        let formData = new FormData();
        files.forEach(file => formData.append("files", file));
        $("#upload-progress").show();
        let progressbar = $("#upload-progress-bar");
        xhttp.upload.addEventListener('progress', (event) => {
            var perc = Math.round(event.loaded / event.total * 100);
            progressbar.css('width', perc + '%').html( perc + '%');
        });
        xhttp.open("POST", "/api/scheduler/upload", true);
        xhttp.send(formData);
    }
    
    function sendCommand(target, args) {
        if(args === undefined) args = {};
        args.target = target
        ws.send(JSON.stringify(args));
    }
    
    function duration_editor(parent, uuid) {
        let oldHTML = parent[0].outerHTML;
        let cur_dur = parent.html();
        parent.removeAttr('onclick');
        parent.html(`
        <div class="input-group" style="width: 10ch; max-width: 10ch;">
            <input type="number" class="form-control form-control-sm" id="update-duration" min="0" value="${cur_dur}">
            <button title="Save" class="btn btn-sm btn-outline-success" type="button" onclick="sendCommand('scheduler/update_duration', {uuid: '${uuid}', duration: $('#update-duration').val()});" id="duration-update-confirm-btn"><i class="bi bi-check-lg"></i></button>
        </div>
        `);
        $('#update-duration').blur((event) => {
            if (event.relatedTarget && event.relatedTarget.id == "duration-update-confirm-btn") return;
            parent.outerHTML = oldHTML;
        }).focus();
    };
    
    function downloadFiles(files) {
        for (const [key, value] of Object.entries(files)) {
            var link = document.createElement("a");
            link.download = key;
            link.href = "/uploaded/" + key;
            document.body.appendChild(link);
            link.click();
            link.remove();
        };
    }
    
    checkedfiles = {};        
    function uncheckAll(){
        document.getElementsByName('filecheck').forEach(element => {element.checked = false});
        checkedfiles = {};
    }

    modal_input_url.oninput = () => sendCommand('scheduler/validate_url', {url: modal_input_url.value});
    $('#add_asset_btn').click(() => {
        var tmp = { items: {} };
        tmp.items[modal_input_url.val()] = {duration: $('modal_input_duration').val()};
        sendCommand('scheduler/asset', tmp);
    });

    /* $('#dnd-interceptor').on('drop', event => {
        event.preventDefault();
        event.stopPropagation();

        if (event.dataTransfer.items) {
            // Use DataTransferItemList interface to access the file(s)
            event.dataTransfer.items.forEach((item, i) => {
                // If dropped items aren't files, reject them
                if (item.kind === 'file') {
                    const file = item.getAsFile();
                    console.log(`… file[${i}].name = ${file.name}`);
                }
            });
        } else {
            // Use DataTransfer interface to access the file(s)
            event.dataTransfer.files.forEach((file, i) => {
                console.log(`… file[${i}].name = ${file.name}`);
            });
        }
    }); */

{% endblock js %}


{% block recv_cmds %}
case 'scheduler/asset':
    asset_table.html('');
    data.items.forEach((item, i) => {
        asset_table.append(
            $('<tr></tr>').attr('id', item.uuid)
                .toggleClass('table-active', item.uuid == data.current)
                .append(
                    $('<td class="align-middle asset-list-handle" style="width: 2em;"></td>')
                    .append(
                        $('<i class="bi bi-globe" style="color: grey;"></i>')
                            .attr('id', 'icon-' + item.uuid)
                            .mouseover((e) => $(e.target).removeClass('bi-globe').addClass('bi-arrow-down-up'))
                            .mouseout((e) => $(e.target).removeClass('bi-arrow-down-up').addClass('bi-globe'))
                    ),
                    $('<td class="align-middle"></td>').html(item.url),
                    $('<td class="align-middle" style="width: 6em;" name="dur_edit"></td>')
                        .click((e) => duration_editor($(e.target), item.uuid))
                        .html(item.duration),
                    $('<td class="align-middle" style="width: 8em;"></td>').append(
                        $('<div class="hstack gap-2"></div>').append(
                            $('<div class="form-check form-switch"></div>').append(
                                $('<input class="form-check-input" type="checkbox" role="switch">')
                                    .attr('title', (item.enabled?'Dis':'En') + 'able asset')
                                    .attr('checked', item.enabled)
                                    .change(() => sendCommand('scheduler/set_state', {uuid: item.uuid, state: !item.enabled}))
                            ),
                            $('<div class="btn-group" role="group"></div>').append(
                                $('<button type="button" title="Delete asset" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>')
                                    .click(() => sendCommand('scheduler/delete', {uuid: item.uuid})),
                                $('<button type="button" title="Show asset" class="btn btn-sm btn-outline-secondary"><i class="bi bi-box-arrow-in-right"></i></button>')
                                    .click(() => sendCommand('scheduler/goto', {index: i}))
                            )
                        )
                    )
                )
        )
    });
    break;

case 'scheduler/validate_url':
    if (modal_input_url.value.length && !data.valid){
        bootstrap.Popover.getOrCreateInstance(modal_input_url, {container: 'body', content: 'Invalid url', placement: 'bottom'}).show();
        modal_input_url.className = "border border-danger border-2 form-control";
    } else {
        bootstrap.Popover.getOrCreateInstance(modal_input_url).dispose();
        modal_input_url.className = "form-control";
    }
    break;

case 'scheduler/asset/current':
    asset_table.children().each((i,element) => {
        $(element).toggleClass('table-active', element.id == data.uuid);
    });
    break;

case 'scheduler/file':
    const list = $('#file-list');
    list.html('');
    data.files.forEach(file => {
        list.append(
            $('<li class="list-group-item list-group-item-action d-flex justify-content-between align-items-start"></li>').append(
                $('<input class="form-check-input" type="checkbox" name="filecheck">')
                    .click((e) => {
                        if (e.target.checked)
                            checkedfiles[file.filename] = {duration: file.duration_s};
                        else
                            delete checkedfiles[file.filename];
                    }),
                $('<div class="ms-2 me-auto"></div>').append(
                    $('<p class="text-break mb-0"></p>').html(file.filename),
                    $('<small class="text-muted"></small>')
                        .html('Duration: ' + (file.duration ?? (file.duration_s+'s')) + ' | Size: ' + file.size)
                )
            )
        );
    });
    break;

case 'settings/default_duration':
    $('#modal_input_duration').val(data.duration);
    break;

case 'settings/display/bounds':
    $('#display_bounds').html( 
        (data.bounds.width && data.bounds.height)?
            `${data.bounds.width}x${data.bounds.height}`:
            'Not connected');
    break;

case 'settings/hostname':
    document.title = 'UniTotem (' + data.hostname + ') - Manager';
    break;

case 'scheduler/asset/current':
    document.getElementsByName('asset-row').forEach(element => 
        element.classList.toggle('table-active', element.id == ('icon-' + data.uuid))
    );
    break;
{% endblock recv_cmds %}
</script>
