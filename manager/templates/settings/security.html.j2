{% extends "settings.html.j2" %}

<style>
{% block custom_style %}
{% endblock custom_style %}
</style>

{% block body_top %}
    <div class="modal fade" id="userModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userModalLabel">New user</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="userNameInput" placeholder="Name">
                        <label for="userNameInput">Name</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="password" class="form-control" id="userPasswordInput" placeholder="Password">
                        <label for="userPasswordInput">Password</label>
                    </div>
                    <p class="ms-1">Groups</p>
                    <div id="userModalGroups" class="ms-2"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Save</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="groupModal" tabindex="-1">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="groupModalLabel">New group</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="groupNameInput" placeholder="Name">
                        <label for="groupNameInput">Group name</label>
                    </div>
                    <fieldset class="nested-multiselect gap-2">
                        <legend>Permissions</legend>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="ck-All">
                            <label class="form-check-label" for="ck-All">All</label>
                        </div>
                        <fieldset id="sub-All" name="All" class="m-0 ms-4">
                            {% for k,v in api_tree.items() recursive %}
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="ck-{{ k }}">
                                <label class="form-check-label" for="ck-{{ k }}">{{ k }}</label>
                            </div>
                            {% if v is mapping %}
                            <fieldset id="sub-{{ k }}" name="{{ k }}" class="m-0 ms-4"
                                      style="margin-bottom: calc(1.6rem/{{ loop.depth }})!important;">
                                {{ loop(v.items()) }}
                            </fieldset>
                            {% elif v %}
                            <span class="text-muted ms-4">{{ v }}</span>
                            {% endif %}
                            {% endfor %}
                        </fieldset>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Save</button>
                </div>
            </div>
        </div>
    </div>
{% endblock body_top %}


{% block content %}
    <div class="row">
        <div class="col col-6">
            <h4>Users</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="col-2">Username</th>
                        <th scope="col">Groups</th>
                        <th scope="col" class="col-2"></th>
                    </tr>
                </thead>
                <tbody id="usertable"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"><div class="d-grid"><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#userModal"><i class="bi bi-person-add"></i> New user</button></div></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="col col-6">
            <h4>Groups</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="col-2">Group&nbsp;name</th>
                        <th scope="col">Permissions</th>
                        <th scope="col" class="col-2"></th>
                    </tr>
                </thead>
                <tbody id="grouptable"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"><div class="d-grid"><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#groupModal"><i class="bi bi-folder-plus"></i> New group</button></div></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    {#<div class="form-floating mb-3" style="max-width: 30em;">
        <input type="email" class="form-control" id="loggedUser" placeholder="admin" value="{{logged_user}}" disabled>
        <label for="loggedUser">Username</label>
    </div>
    <div class="form-floating mb-3" style="max-width: 30em;">
        <input type="password" class="form-control" id="inputNewPassword" placeholder="Password">
        <label for="inputNewPassword">New password</label>
    </div>
    <form action="/api/settings/set_passwd" method="post">
        <div class="form-floating mb-3" style="max-width: 30em;">
            <input type="password" class="form-control" id="inputNewPassword2" placeholder="Password" name="password">
            <label for="inputNewPassword2">Repeat new password</label>
        </div>
        <div style="max-width: 30em;">
            <button type="submit" class="btn btn-success float-end" id="set_passwd" disabled><i class="bi bi-check2"></i> Change password</button>
        </div>
    </form>#}
{% endblock content %}

{% set init_cmds = ['Settings/Security/getUsers', 'Settings/Security/getGroups'] %}

<script type="text/javascript" charset="utf-8">
{% block js %}
{#const pwd1 = $('#inputNewPassword');#}
{#const pwd2 = $('#inputNewPassword2');#}
{#const sub = $('#set_passwd');#}
{#pwd1.on('input', () => sub.prop('disabled', (pwd1.val() === '') || (pwd1.val() !== pwd2.val())));#}
{#pwd2.on('input', () => sub.prop('disabled', (pwd1.val() === '') || (pwd1.val() !== pwd2.val())));#}
const user_modal_groups = $('#userModalGroups');
const user_table = $('#usertable');
const group_table = $('#grouptable');

function setInputState(el, state) {
    if (state === 'indeterminate') {
        el.indeterminate = true;
    } else {
        el.indeterminate = false;
        el.checked = state;
    }
}

function updateOwned(el) {
    let state = el.checked;
    $(el).parent().next().find('>div>input').each((i,owned) => {
        setInputState(owned, state);
        updateOwned(owned);
    });
}

function updateOwner(el) {
    let name = $(el).closest('fieldset[name]').attr('name');
    let owner = $(`#ck-${name}`);
    if (owner.length) {
        let states = [];
        let collectiveState;
        $(el).parent().parent().find('>div>input').each((i,owned) => {
            let state = owned.indeterminate === true ? 'indeterminate' : owned.checked;
            if (states.length > 0 && states.indexOf(state) === -1) {
                collectiveState = 'indeterminate';
            } else {
                states.push(state);
            }
        })
        collectiveState = collectiveState || states[0];
        setInputState(owner[0], collectiveState);
        updateOwner(owner);
    }
}

$('.nested-multiselect').each((i, multiselect) => {
    $(multiselect).find('.form-check-input').each((j, input) => {
        input.addEventListener('change', event => {
            updateOwned(event.currentTarget);
            updateOwner(event.currentTarget);
        });
    });
});

function list_selected(root){
    let elems = [...$(root).find('>div>input')];
    if (!elems.length) return false;
    if (elems.every(el=>el.checked))
        return '*';
    else if (elems.every(el=>!el.checked && !el.indeterminate))
        return '';
    else {
        return elems.filter(e => e.checked || e.indeterminate).map(e => {
            let selected = list_selected($(e).parent().next());
            if (Array.isArray(selected)){
                return selected.map(s=>$(e).next().text() + (s?('/' + s):''))
            } else if (selected === false){
                return $(e).next().text()
            } else {
                return $(e).next().text() + '/' + selected;
            }
        }).flat(Infinity);
    }
}
//list_selected($('#sub-All'));

{% endblock js %}

{% block recv_cmds %}
case 'Settings/Security/getUsers':
    user_table.empty();
    data.users.forEach(([user,data])=>{
        user_table.append(
            $('<tr></tr>').append(
                $('<th scope="col"></th>').html(user),
                $('<td></td>').html(data.groups),
                $('<td></td>').append(
                    $('<div class="btn-group" role="group"></div>').append(
                        $('<button type="button" title="Edit user" class="btn btn-sm btn-outline-warning"><i class="bi bi-pencil"></i></button>'),
                        $('<button type="button" title="Delete user" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>')
                    )
                )
            )
        )
    });
    break

case 'Settings/Security/getGroups':
    group_table.empty();
    user_modal_groups.empty();
    data.groups.forEach(([group,data],i)=>{
        group_table.append(
            $('<tr></tr>').append(
                $('<th scope="col"></th>').html(group),
                $('<td></td>').html(data.perms.join(', ')),
                $('<td></td>').append(
                    $('<div class="btn-group" role="group"></div>').append(
                        $('<button type="button" title="Edit group" class="btn btn-sm btn-outline-warning"><i class="bi bi-pencil"></i></button>'),
                        $('<button type="button" title="Delete group" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>')
                    )
                )
            )
        )
        user_modal_groups.append(
            $('<div class="form-check"></div>').append(
                $('<input class="form-check-input" type="checkbox" value="">').attr('id', 'userGroupCheck' + i),
                $('<label class="form-check-label"></label>').attr('for', 'userGroupCheck' + i).html(group)
            )
        )
    });
    break
{% endblock recv_cmds %}
</script>
