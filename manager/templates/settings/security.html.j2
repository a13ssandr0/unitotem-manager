{% extends "settings.html.j2" %}

<style>
{% block custom_style %}
{% endblock custom_style %}
</style>

{% block body_top %}
    <div class="modal fade" id="userModal" tabindex="-1">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userModalLabel">New user</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <fieldset class="nested-multiselect">
                        <legend>Categories</legend>
                        <label id="label-All" style="display: block;">
                            <input id="All" type="checkbox" name="categories" value="All" aria-owns="subcategories-All"
                                    data-children="{{ api_tree.keys()|join(' ') }}"/><span class="ms-2">All</span>
                        </label>
                        <fieldset id="subcategories-All" name="All" aria-label="All subcategories" style="border: none; padding: 0 0 0 2ch;">
                            {% for k,v in api_tree|dictsort(case_sensitive=True) recursive %}
                            <label id="label-{{ k }}" style="display: block; {% if v %}margin-top:calc(2rem/{{ loop.depth }}){% endif %}">
                                <input id="{{ k }}" type="checkbox" name="categories" value="{{ k }}"
                                       aria-owns="subcategories-{{ k }}" {% if v %}data-children="{{ v.keys()|join(' ') }}"{% endif %}/><span class="ms-2">{{ k }}</span>
                            </label>
                            {% if v %}
                            <fieldset id="subcategories-{{ k }}" name="{{ k }}" aria-label="{{ k }} subcategories" style="border: none; padding: 0 0 0 2ch;">
                                {{ loop(v|dictsort) }}
                            </fieldset>
                            {% endif %}
                            {% endfor %}
                        </fieldset>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Yes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="groupModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="groupModalLabel">New group</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Yes</button>
                </div>
            </div>
        </div>
    </div>
{% endblock body_top %}


{% block content %}
    <div class="row">
        <div class="col col-6">
            <h4>Users</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="col-2">Username</th>
                        <th scope="col">Groups</th>
                        <th scope="col" class="col-2"></th>
                    </tr>
                </thead>
                <tbody id="usertable"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"><div class="d-grid"><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#userModal"><i class="bi bi-person-add"></i> New user</button></div></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="col col-6">
            <h4>Groups</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="col-2">Group&nbsp;name</th>
                        <th scope="col">Permissions</th>
                        <th scope="col" class="col-2"></th>
                    </tr>
                </thead>
                <tbody id="grouptable"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"><div class="d-grid"><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#groupModal"><i class="bi bi-folder-plus"></i> New group</button></div></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    {#<div class="form-floating mb-3" style="max-width: 30em;">
        <input type="email" class="form-control" id="loggedUser" placeholder="admin" value="{{logged_user}}" disabled>
        <label for="loggedUser">Username</label>
    </div>
    <div class="form-floating mb-3" style="max-width: 30em;">
        <input type="password" class="form-control" id="inputNewPassword" placeholder="Password">
        <label for="inputNewPassword">New password</label>
    </div>
    <form action="/api/settings/set_passwd" method="post">
        <div class="form-floating mb-3" style="max-width: 30em;">
            <input type="password" class="form-control" id="inputNewPassword2" placeholder="Password" name="password">
            <label for="inputNewPassword2">Repeat new password</label>
        </div>
        <div style="max-width: 30em;">
            <button type="submit" class="btn btn-success float-end" id="set_passwd" disabled><i class="bi bi-check2"></i> Change password</button>
        </div>
    </form>#}
{% endblock content %}

{% set init_cmds = ['Settings/Security/getUsers', 'Settings/Security/getGroups'] %}

<script type="text/javascript" charset="utf-8">
{% block js %}
{#const pwd1 = $('#inputNewPassword');#}
{#const pwd2 = $('#inputNewPassword2');#}
{#const sub = $('#set_passwd');#}
{#pwd1.on('input', () => sub.prop('disabled', (pwd1.val() === '') || (pwd1.val() !== pwd2.val())));#}
{#pwd2.on('input', () => sub.prop('disabled', (pwd1.val() === '') || (pwd1.val() !== pwd2.val())));#}
const user_table = $('#usertable');
const group_table = $('#grouptable');

const setInputState = (el, state) => {
    if (state === 'indeterminate') {
        el.indeterminate = true
    } else {
        el.indeterminate = false
        el.checked = state
    }
}

const updateOwned = (el) => {
    if (el.hasAttribute('data-children')) {
        let state = el.checked
        el.getAttribute('data-children').split(' ').forEach(id => {
            let owned = document.getElementById(id)
            setInputState(owned, state)
            updateOwned(owned)
        })
    }
}

const updateOwner = (el) => {
    let owner = document.getElementById($(el).closest('fieldset[name]').attr('name'))
    if (!!owner) {
        {#let owner = document.getElementById(el.getAttribute('data-parent'))#}
        let states = []
        let collectiveState
        owner.getAttribute('data-children').split(' ').every(id => {
            let owned = document.getElementById(id)
            let state = owned.indeterminate === true ? 'indeterminate' : owned.checked
            if (states.length > 0 && states.indexOf(state) === -1) {
                collectiveState = 'indeterminate'
                return false
            } else {
                states.push(state)
                return true
            }
        })
        collectiveState = collectiveState || states[0]
        setInputState(owner, collectiveState)
        updateOwner(owner)
    }
}

document.querySelectorAll('.nested-multiselect').forEach(multiselect => {
    multiselect.querySelectorAll('input[type="checkbox"]').forEach(input => {
        input.addEventListener('change', event => {
            updateOwned(event.currentTarget)
            updateOwner(event.currentTarget)
        })
    })
})

{% endblock js %}

{% block recv_cmds %}
case 'Settings/Security/getUsers':
    user_table.empty();
    data.users.forEach(([user,data])=>{
        user_table.append(
            $('<tr></tr>').append(
                $('<th scope="col"></th>').html(user),
                $('<td></td>').html(data.groups),
                $('<td></td>').append(
                    $('<div class="btn-group" role="group"></div>').append(
                        $('<button type="button" title="Edit user" class="btn btn-sm btn-outline-warning"><i class="bi bi-pencil"></i></button>'),
                        $('<button type="button" title="Delete user" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>')
                    )
                )
            )
        )
    });
    break

case 'Settings/Security/getGroups':
    group_table.empty();
    data.groups.forEach(([group,data])=>{
        group_table.append(
            $('<tr></tr>').append(
                $('<th scope="col"></th>').html(group),
                $('<td></td>').html(data.perms.join(', ')),
                $('<td></td>').append(
                    $('<div class="btn-group" role="group"></div>').append(
                        $('<button type="button" title="Edit group" class="btn btn-sm btn-outline-warning"><i class="bi bi-pencil"></i></button>'),
                        $('<button type="button" title="Delete group" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>')
                    )
                )
            )
        )
    });
    break
{% endblock recv_cmds %}
</script>
