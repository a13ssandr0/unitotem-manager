{% extends "settings.html.j2" %}
{% block content %}
<h4>Backup</h4>
<a type="button" class="btn btn-sm btn-primary" href="/backup"><i class="bi bi-journal-arrow-down"></i> Configuration only</a>
<a type="button" class="btn btn-sm btn-primary" href="/backup?include_uploaded"><i class="bi bi-database-down"></i> Configuration and files</a>


<h4 class="mt-5">Restore</h4>
<div class="progress" id="upload-progress" style="display: none;">
    <div class="progress-bar progress-bar-striped progress-bar-animated" id="upload-progress-bar" role="progressbar" style="width: 0%">0%</div>
</div>
<form style="max-width: 30em;">
    <input class="form-control form-control-sm" type="file" accept="application/zip" name="backup_file" id="formFile">
    <div id="uploadSettings" style="display: none;">
        <div class="p-3">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="true" name="CONFIG" id="mainConfCheck" disabled>
                <label class="form-check-label" for="mainConfCheck">Main configuration</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="true" name="def_audio_dev" id="alsaCheck" disabled>
                <label class="form-check-label" for="alsaCheck">Alsa default audio device</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="true" name="hostname" id="hostnameCheck" disabled>
                <label class="form-check-label" for="hostnameCheck">Device hostname</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="true" name="netplan" id="netplanCheck" disabled>
                <label class="form-check-label" for="netplanCheck">Netplan configuration files</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="true" name="uploaded" id="fileCheck" disabled>
                <label class="form-check-label" for="fileCheck">Uploaded files</label>
            </div>
        </div>
        <button type="submit" class="btn btn-sm btn-warning"><i class="bi bi-upload"></i> Restore</button>
    </div>
</form>


<h4 class="mt-5">Reset</h4>
<button type="button" class="btn btn-sm btn-danger" data-bs-title="Do you want to reset UniTotem configuration?" data-bs-positive-btn="Reset" data-bs-positive-action="resetConfig()" data-bs-negative-btn="No" data-bs-toggle="modal" data-bs-target="#confirmModal"><i class="bi bi-trash"></i> Reset</button>
{% endblock content %}

{% set ext_scripts = ['jquery.form.js', 'jszip.min.js', 'jszip-utils.min.js'] %}

<script type="text/javascript" charset="utf-8">
{% block js %}
const upload_progress = $("#upload-progress");
const progressbar = $("#upload-progress-bar");
const checks = $('input[type="checkbox"][name]:not([name="uploaded"])');
const upload_settings = $('#uploadSettings');
const fileCheck = $("#fileCheck");
$('#formFile').change(function () {
    let files = $(this).prop('files');
    if (files.length > 0){
        JSZip.loadAsync(files[0]).then((zip) => {
            zip.file("config.json").async("string").then((content) =>{
                var json = JSON.parse(content);
                checks.each((i, e) => {
                    let enable = json.hasOwnProperty(e.name);
                    $(e).prop('disabled', !enable).prop('checked', enable);
                })
                let enable = zip.file(/^uploaded/).length > 0;
                fileCheck.prop('disabled', !enable).prop('checked', enable);
                upload_settings.show();
            });
        }, () => {
            alert("Not a valid zip file");
            upload_settings.hide();
        }); 
    } else upload_settings.hide();
});

$('form').ajaxForm({
    url: "/backup",
    type: "POST",
    dataType: "json",
    beforeSend: function() {
        upload_progress.show();
        progressbar.css('width', '0%').html( '0%');
    },
    uploadProgress: function(event, position, total, perc) {
        progressbar.css('width', perc + '%').html( perc + '%');
    },
    complete: function(xhr) {
        upload_progress.hide();
        progressbar.css('width', '0%').html( '0%');
    },
    error: function(xhr, textStatus, error){
        messageModal.find('.modal-title').text(textStatus);
        messageModal.find('.modal-body h6').text(`Request returned ${error}`);
        messageModal.find('.modal-body code').text(JSON.stringify(xhr.responseJSON, null, 4));
        new bootstrap.Modal(messageModal).show();
    }
}).submit(function() { 
    // submit the form 
    $(this).ajaxSubmit(); 
    // return false to prevent normal browser submit and page navigation 
    return false; 
});

function resetConfig(on_success, on_error) {
    let xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = () => readyStateHandler(xhttp, on_success, on_error);
    xhttp.open("DELETE", "/backup", true);
    xhttp.send();
}
{% endblock js %}
</script>